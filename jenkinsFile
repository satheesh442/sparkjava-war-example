node {
   def mvnHome
   stage('Git Clone') { // for display purposes
      // Get some code from a GitHub repository
        git 'https://github.com/satheesh442/sparkjava-war-example.git'
      // Get the Maven tool.
      // ** NOTE: This 'M3' Maven tool must be configured
      // **       in the global configuration.           
      mvnHome = tool 'M3'
   }
   stage('Build') {
        sh "'${mvnHome}/bin/mvn' -Dmaven.test.failure.ignore clean package"
   }
   stage('Archive War') {
      archive 'target/*.war'
   }
   stage('Build Docker Image') {
        sh "docker build . -t satheesh442/spark:$BUILD_NUMBER"
   }
   stage('Create latest Tag') {
        sh "docker tag satheesh442/spark:$BUILD_NUMBER satheesh442/spark:latest"
   }
   stage('Push Images to Docker Hub') {
        sh "docker login -u satheesh442 -p $dockerhub && docker push satheesh442/spark:$BUILD_NUMBER && docker push satheesh442/spark:latest"
   }
   stage('Cleanup containers') {
        sh "docker stop spark && docker rm spark"
   }
   stage('Deploy the latest Image'){
       sh "docker run -d --name spark -p 8081:8080 satheesh442/spark:latest"
   }
   stage('Cleanup Image') {
        sh "docker rmi satheesh442/spark:$BUILD_NUMBER"
   }
}
node {
  def remote = [:]
  remote.name = '192.168.253.138'
  remote.host = '192.168.253.138'
  remote.user = 'root'
  remote.password = 'root'
  remote.allowAnyHosts = true
  stage('Remote SSH') {
    sshCommand remote: remote, command: "ls -lrt"
    sshCommand remote: remote, command: "docker ps"
  }
}
